// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address, a=load-1, b=load-2, c=load-3, d=load-4, e=load-5, f=load-6, g=load-7, h=load-8);
    Register(in=in, load=load-1, out=output-1);
    Register(in=in, load=load-2, out=output-2);
    Register(in=in, load=load-3, out=output-3);
    Register(in=in, load=load-4, out=output-4);
    Register(in=in, load=load-5, out=output-5);
    Register(in=in, load=load-6, out=output-6);
    Register(in=in, load=load-7, out=output-7);
    Register(in=in, load=load-8, out=output-8);
    Mux8Way16(a=output-1, b=output-2, c=output-3, d=output-4, e=output-5, f=output-6, g=output-7, h=output-8, sel=address, out=out);
}